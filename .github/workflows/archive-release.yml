name: React to release

on:
  repository_dispatch:
    types: [actions-release-trigger]
jobs:
  myEvent:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        run: |
          set -x
          META_REPO=${{ github.event.client_payload.meta_repository }}
          rm -rf sparse-meta
          git clone --depth 1 --no-checkout --filter=blob:none  https://github.com/${META_REPO} sparse-meta
          cd sparse-meta
          git reset master
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

          SRC_REPO=${{ github.event.client_payload.caller_repository }}
          TAG=${{ github.event.client_payload.tag }}
          TYPE=${{ github.event.client_payload.type }}

          mkdir $TYPE || echo "$TYPE exists"
          cd $TYPE
          wget https://github.com/$SRC_REPO/releases/download/${TAG}/VERSION -O VERSION.new
          VERSION=$(grep "^SEMANTIC_VERSION=" VERSION.new | sed -e "s/^[[:space:]]*//;s/[[:space:]]*$//" | cut -f2- -d= )
          if [[ ! "$VERSION" =~ ^[0-9][0-9]*[.][0-9][0-9]*([.][0-9][0-9]*)?(-[0-9a-zA-Z.]+)? ]]; then
            echo "$VERSION invalid"
            exit 1
          fi
          mv -f VERSION.new VERSION
          git add VERSION
          cd ..

          DATE=$(date | sed -e "s/ /_/g")
          mkdir -p archive/$DATE
          cd archive/$DATE
          FILENAME=magellan_v${VERSION}
          JAR=${FILENAME}.jar
          ZIP=${FILENAME}.zip
          MAC=${FILENAME}_macos.tgz
          wget https://github.com/$SRC_REPO/releases/download/${TAG}/${JAR}
          wget https://github.com/$SRC_REPO/releases/download/${TAG}/${ZIP}
          wget https://github.com/$SRC_REPO/releases/download/${TAG}/${MAC} || echo "${MAC} not found."
          git add ${JAR} || echo ${JAR} does not exist
          git add ${ZIP} || echo ${ZIP} does not exist
          git add ${MAC} || echo ${MAC} does not exist
          cd ../..

          echo "($DATE) added new $TYPE release $VERSION." >> log.txt
          git add log.txt

          git commit -m "triggered new version ${VERSION}"
          REMOTE="https://$GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"
          git push "$REMOTE" 
